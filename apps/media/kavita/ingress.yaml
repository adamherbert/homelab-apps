---
# https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kavita
  labels:
    app: kavita
    part-of: media
  annotations:
    cert-manager.io/cluster-issuer: external
    # nginx.ingress.kubernetes.io/auth-url: |-
    #   http://ak-outpost-nginx-ingress.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    # # If you're using domain-level auth, use the authentication URL instead of the application URL
    # nginx.ingress.kubernetes.io/auth-signin: |-
    #   https://$host/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
    # nginx.ingress.kubernetes.io/auth-response-headers: |-
    #   Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    # nginx.ingress.kubernetes.io/auth-snippet: |
    #   proxy_set_header X-Forwarded-Host $http_host;
    # traefik.ingress.kubernetes.io/router.middlewares: authentik-ak-outpost-authentik-embedded-outpost@kubernetescrd
    gethomepage.dev/enabled: "true"
    gethomepage.dev/description: Kavita
    gethomepage.dev/group: Media
    gethomepage.dev/icon: kavita.png
    gethomepage.dev/name: Kavita
    gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_KAVITA_API_KEY}}"
    gethomepage.dev/widget.type: "kavita"
    gethomepage.dev/widget.url: "https://kavita.home.8none1.com/"
    gethomepage.dev/pod-selector: ""
spec:
  ingressClassName: nginx
  rules:
    - host: kavita.home.8none1.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kavita
                port:
                  name: http
  tls:
    - hosts:
        - kavita.home.8none1.com
      secretName: kavita-ingress-tls
