---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  labels:
    app.kubernetes.io/name: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  minReadySeconds: 0
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9100"
      labels:
        app.kubernetes.io/name: traefik
        app.kubernetes.io/instance: traefik-traefik
        helm.sh/chart: traefik-33.0.0
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: traefik
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 60
      hostNetwork: false
      containers:
        - image: docker.io/traefik:v3.3.6
          imagePullPolicy: IfNotPresent
          name: traefik
          resources:
            requests:
              cpu: 500m # 0.5 CPU
              memory: 512Mi # 512 MB RAM
            limits:
              cpu: 1000m # 1 CPU
              memory: 1Gi # 1 GB RAM
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            failureThreshold: 1
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            failureThreshold: 3
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          ports:
            - name: "metrics"
              containerPort: 9100
              protocol: "TCP"
            - name: "traefik"
              containerPort: 8080
              protocol: "TCP"
            - name: "web"
              containerPort: 80
              protocol: "TCP"
            - name: "websecure"
              containerPort: 443
              protocol: "TCP"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: data
              mountPath: /data
            - name: tmp
              mountPath: /tmp
            # - name: plugins-storage
            #   mountPath: /plugins-storage
          args:
            - "--global.checknewversion"
            - "--global.sendanonymoususage"
            - "--entryPoints.metrics.address=:9100/tcp"
            - "--entryPoints.traefik.address=:8080/tcp"
            - "--entryPoints.web.address=:80/tcp"
            - "--entryPoints.websecure.address=:443/tcp"
            - "--entryPoints.websecure.http.tls=true"
            - "--entrypoints.web.http.redirections.entryPoint.to=:443"
            - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
            - "--api.dashboard=true"
            - "--api.insecure=true"
            - "--ping=true"
            - "--metrics.prometheus=true"
            - "--metrics.prometheus.entrypoint=metrics"
            - "--providers.kubernetescrd"
            - "--providers.kubernetescrd.allowEmptyServices=true"
            - "--providers.kubernetesingress"
            - "--providers.kubernetesingress.allowEmptyServices=true"
            - "--providers.kubernetesingress.ingressendpoint.publishedservice=traefik/traefik"
            - "--providers.kubernetescrd.allowCrossNamespace=true"
            # - "--experimental.plugins.traefik-modsecurity-plugin.modulename=github.com/acouvreur/traefik-modsecurity-plugin"
            # - "--experimental.plugins.traefik-modsecurity-plugin.version=v1.3.0"
            # - "--entryPoints.websecure.http.middlewares=traefik-modsecurity@kubernetescrd"
            - "--log.level=INFO"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
        # - image: owasp/modsecurity-crs:4.8.0-nginx-202411071011
        #   imagePullPolicy: IfNotPresent
        #   name: modsecurity
        #   resources:
        #     requests:
        #       cpu: 500m # 0.5 CPU
        #       memory: 512Mi # 512 MB RAM
        #     limits:
        #       cpu: 1000m # 1 CPU
        #       memory: 1Gi # 1 GB RAM
        #   ports:
        #     - containerPort: 9090
        #   securityContext:
        #     readOnlyRootFilesystem: false
        #   volumeMounts:
        #     - name: plugins-storage
        #       mountPath: /plugins-storage
        #     # - name: modsecurity-config
        #     #   mountPath: /etc/modsecurity.d
        #     # - name: nginx-config
        #     #   mountPath: /etc/nginx
        #   env:
        #     - name: PARANOIA
        #       value: "1"
        #     - name: ANOMALYIN
        #       value: "5"
        #     - name: PORT
        #       value: "9090"
        #     - name: BACKEND
        #       value: "http://dummy"
      volumes:
        - name: data
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        # - name: plugins-storage
        #   emptyDir: {}
        # - name: nginx-config
        #   emptyDir: {}
        # - name: modsecurity-config
        #   emptyDir: {}
      securityContext:
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
